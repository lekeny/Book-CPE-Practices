/* Ex. 6.1.1 @ pg103 */
/* Version 1, done prior to looking at textbook's solution. */

/* Completely Working! */

#include <iostream>
#include <string>

int upper[26];
int lower[26];
int sum[26];
char output;
int rearranged[26];

void countLetterFrequency(std::string input);
void rearrangeAndOutputFrequency();


int main(void)
{
    std::string input;

    int numberOfInputs = 0;
        
    std::cin >> numberOfInputs;
    std::cin.ignore();
    
    for(int i = 0; i < numberOfInputs; i++)
    {
        std::getline(std::cin, input);
        countLetterFrequency(input);
    }
   
    rearrangeAndOutputFrequency();
    
    return 0;
}


void countLetterFrequency(std::string input)
{    
    for(int i = 0; i < (int)input.size(); i++)
    {
        if (input[i] >= 'A' && input[i] <= 'Z')
        {
            upper[input[i]-65]++;
        }
        else if (input[i] >= 'a' && input[i] <= 'z')
        {
            lower[input[i]-97]++;
        }
    }
    
    for(int i = 0; i < 26; i++)
    {
        sum[i] = upper[i] + lower[i];
    }
    
}

void rearrangeAndOutputFrequency()
{
    int largest = -1;
    int largestIndex = -1;
    
    for(int k = 0; k < 26; k++)
    {
        for(int i = 0; i < 26; i++)
        {
            if (sum[i] > largest)
            {
                largest = sum[i];
                largestIndex = i;
            }
        }
        rearranged[k] = largest;
        
        if ( rearranged[k] != 0 )
        {
            output = largestIndex + 65;
            std::cout << output << " " << largest << std::endl;
        }
        
        sum[largestIndex] = 0;
        largest = -1;   
        largestIndex = -1;
    }
}
