//Convert a number from any base back to base 10.

//Completely Working!

#include <iostream>
#include <string>

int main(void)
{
	long long int sum = 0;

	std::string numberToBeConverted;

	std::getline(std::cin, numberToBeConverted);

	int minimumBase = 0;

	for (int i = 0; i < numberToBeConverted.size(); i++)
	{
		if (numberToBeConverted[i] >= '0' && numberToBeConverted[i] <= '9')
		{
			if (minimumBase < (numberToBeConverted[i] - '0'))
			{
				minimumBase = numberToBeConverted[i] - '0';
			}
		}
		else if (numberToBeConverted[i] >= 'A' && numberToBeConverted[i] <= 'Z')
		{
			if (minimumBase < (numberToBeConverted[i] - 55))
			{
				minimumBase = numberToBeConverted[i] - 55;
			}
		}
		else
		{
			if (minimumBase < (numberToBeConverted[i] - 61))
			{
				minimumBase = numberToBeConverted[i] - 61;
			}
		}
	}

	minimumBase++;

	for (int base = minimumBase; base <= 62; base++)
	{
		sum = 0;

		int power = numberToBeConverted.size() - 1;

		for (int i = 0; i < numberToBeConverted.size(); i++)
		{
			if (numberToBeConverted[i] >= '0' && numberToBeConverted[i] <= '9')
			{
				sum += (numberToBeConverted[i] - '0') * pow(base, power);
			}
			else if (numberToBeConverted[i] >= 'A' && numberToBeConverted[i] <= 'Z')
			{
				sum += (numberToBeConverted[i] - 55) * pow(base, power);
			}
			else
			{
				sum += (numberToBeConverted[i] - 61) * pow(base, power);
			}
			power--;
		}

		if (sum % (base - 1) == 0)
		{
			std::cout << base << std::endl;
			return 0;
		}
	}

	std::cout << "such number is impossible!\n";

	return 0;
}
